// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/radar.proto

package proto_ksync

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ContainerPath struct {
	ContainerId          string   `protobuf:"bytes,1,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerPath) Reset()         { *m = ContainerPath{} }
func (m *ContainerPath) String() string { return proto.CompactTextString(m) }
func (*ContainerPath) ProtoMessage()    {}
func (*ContainerPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_radar_ae4bb1d450f0a6bc, []int{0}
}
func (m *ContainerPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerPath.Unmarshal(m, b)
}
func (m *ContainerPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerPath.Marshal(b, m, deterministic)
}
func (dst *ContainerPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerPath.Merge(dst, src)
}
func (m *ContainerPath) XXX_Size() int {
	return xxx_messageInfo_ContainerPath.Size(m)
}
func (m *ContainerPath) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerPath.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerPath proto.InternalMessageInfo

func (m *ContainerPath) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type BasePath struct {
	Full                 string   `protobuf:"bytes,1,opt,name=full" json:"full,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasePath) Reset()         { *m = BasePath{} }
func (m *BasePath) String() string { return proto.CompactTextString(m) }
func (*BasePath) ProtoMessage()    {}
func (*BasePath) Descriptor() ([]byte, []int) {
	return fileDescriptor_radar_ae4bb1d450f0a6bc, []int{1}
}
func (m *BasePath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasePath.Unmarshal(m, b)
}
func (m *BasePath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasePath.Marshal(b, m, deterministic)
}
func (dst *BasePath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasePath.Merge(dst, src)
}
func (m *BasePath) XXX_Size() int {
	return xxx_messageInfo_BasePath.Size(m)
}
func (m *BasePath) XXX_DiscardUnknown() {
	xxx_messageInfo_BasePath.DiscardUnknown(m)
}

var xxx_messageInfo_BasePath proto.InternalMessageInfo

func (m *BasePath) GetFull() string {
	if m != nil {
		return m.Full
	}
	return ""
}

type Error struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_radar_ae4bb1d450f0a6bc, []int{2}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type VersionInfo struct {
	Version              string   `protobuf:"bytes,1,opt,name=Version" json:"Version,omitempty"`
	GoVersion            string   `protobuf:"bytes,2,opt,name=GoVersion" json:"GoVersion,omitempty"`
	GitCommit            string   `protobuf:"bytes,3,opt,name=GitCommit" json:"GitCommit,omitempty"`
	GitTag               string   `protobuf:"bytes,4,opt,name=GitTag" json:"GitTag,omitempty"`
	BuildDate            string   `protobuf:"bytes,5,opt,name=BuildDate" json:"BuildDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionInfo) Reset()         { *m = VersionInfo{} }
func (m *VersionInfo) String() string { return proto.CompactTextString(m) }
func (*VersionInfo) ProtoMessage()    {}
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_radar_ae4bb1d450f0a6bc, []int{3}
}
func (m *VersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionInfo.Unmarshal(m, b)
}
func (m *VersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionInfo.Marshal(b, m, deterministic)
}
func (dst *VersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionInfo.Merge(dst, src)
}
func (m *VersionInfo) XXX_Size() int {
	return xxx_messageInfo_VersionInfo.Size(m)
}
func (m *VersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VersionInfo proto.InternalMessageInfo

func (m *VersionInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionInfo) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *VersionInfo) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *VersionInfo) GetGitTag() string {
	if m != nil {
		return m.GitTag
	}
	return ""
}

func (m *VersionInfo) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

type DockerVersion struct {
	Version              string   `protobuf:"bytes,1,opt,name=Version" json:"Version,omitempty"`
	APIVersion           string   `protobuf:"bytes,2,opt,name=APIVersion" json:"APIVersion,omitempty"`
	MinAPIVersion        string   `protobuf:"bytes,3,opt,name=MinAPIVersion" json:"MinAPIVersion,omitempty"`
	GitCommit            string   `protobuf:"bytes,4,opt,name=GitCommit" json:"GitCommit,omitempty"`
	GoVersion            string   `protobuf:"bytes,5,opt,name=GoVersion" json:"GoVersion,omitempty"`
	Os                   string   `protobuf:"bytes,6,opt,name=Os" json:"Os,omitempty"`
	Arch                 string   `protobuf:"bytes,7,opt,name=Arch" json:"Arch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerVersion) Reset()         { *m = DockerVersion{} }
func (m *DockerVersion) String() string { return proto.CompactTextString(m) }
func (*DockerVersion) ProtoMessage()    {}
func (*DockerVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_radar_ae4bb1d450f0a6bc, []int{4}
}
func (m *DockerVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerVersion.Unmarshal(m, b)
}
func (m *DockerVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerVersion.Marshal(b, m, deterministic)
}
func (dst *DockerVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerVersion.Merge(dst, src)
}
func (m *DockerVersion) XXX_Size() int {
	return xxx_messageInfo_DockerVersion.Size(m)
}
func (m *DockerVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerVersion.DiscardUnknown(m)
}

var xxx_messageInfo_DockerVersion proto.InternalMessageInfo

func (m *DockerVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DockerVersion) GetAPIVersion() string {
	if m != nil {
		return m.APIVersion
	}
	return ""
}

func (m *DockerVersion) GetMinAPIVersion() string {
	if m != nil {
		return m.MinAPIVersion
	}
	return ""
}

func (m *DockerVersion) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *DockerVersion) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *DockerVersion) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *DockerVersion) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

type DockerInfo struct {
	GraphRoot            string   `protobuf:"bytes,1,opt,name=GraphRoot" json:"GraphRoot,omitempty"`
	Driver               string   `protobuf:"bytes,2,opt,name=Driver" json:"Driver,omitempty"`
	DriverStatus         []string `protobuf:"bytes,3,rep,name=DriverStatus" json:"DriverStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerInfo) Reset()         { *m = DockerInfo{} }
func (m *DockerInfo) String() string { return proto.CompactTextString(m) }
func (*DockerInfo) ProtoMessage()    {}
func (*DockerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_radar_ae4bb1d450f0a6bc, []int{5}
}
func (m *DockerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerInfo.Unmarshal(m, b)
}
func (m *DockerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerInfo.Marshal(b, m, deterministic)
}
func (dst *DockerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerInfo.Merge(dst, src)
}
func (m *DockerInfo) XXX_Size() int {
	return xxx_messageInfo_DockerInfo.Size(m)
}
func (m *DockerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DockerInfo proto.InternalMessageInfo

func (m *DockerInfo) GetGraphRoot() string {
	if m != nil {
		return m.GraphRoot
	}
	return ""
}

func (m *DockerInfo) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *DockerInfo) GetDriverStatus() []string {
	if m != nil {
		return m.DriverStatus
	}
	return nil
}

func init() {
	proto.RegisterType((*ContainerPath)(nil), "proto.ksync.ContainerPath")
	proto.RegisterType((*BasePath)(nil), "proto.ksync.BasePath")
	proto.RegisterType((*Error)(nil), "proto.ksync.Error")
	proto.RegisterType((*VersionInfo)(nil), "proto.ksync.VersionInfo")
	proto.RegisterType((*DockerVersion)(nil), "proto.ksync.DockerVersion")
	proto.RegisterType((*DockerInfo)(nil), "proto.ksync.DockerInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RadarClient is the client API for Radar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RadarClient interface {
	GetBasePath(ctx context.Context, in *ContainerPath, opts ...grpc.CallOption) (*BasePath, error)
	RestartSyncthing(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Error, error)
	Restart(ctx context.Context, in *ContainerPath, opts ...grpc.CallOption) (*Error, error)
	GetVersionInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionInfo, error)
	GetDockerVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*DockerVersion, error)
	GetDockerInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*DockerInfo, error)
}

type radarClient struct {
	cc *grpc.ClientConn
}

func NewRadarClient(cc *grpc.ClientConn) RadarClient {
	return &radarClient{cc}
}

func (c *radarClient) GetBasePath(ctx context.Context, in *ContainerPath, opts ...grpc.CallOption) (*BasePath, error) {
	out := new(BasePath)
	err := c.cc.Invoke(ctx, "/proto.ksync.Radar/GetBasePath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radarClient) RestartSyncthing(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/proto.ksync.Radar/RestartSyncthing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radarClient) Restart(ctx context.Context, in *ContainerPath, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/proto.ksync.Radar/Restart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radarClient) GetVersionInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionInfo, error) {
	out := new(VersionInfo)
	err := c.cc.Invoke(ctx, "/proto.ksync.Radar/GetVersionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radarClient) GetDockerVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*DockerVersion, error) {
	out := new(DockerVersion)
	err := c.cc.Invoke(ctx, "/proto.ksync.Radar/GetDockerVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *radarClient) GetDockerInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*DockerInfo, error) {
	out := new(DockerInfo)
	err := c.cc.Invoke(ctx, "/proto.ksync.Radar/GetDockerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Radar service

type RadarServer interface {
	GetBasePath(context.Context, *ContainerPath) (*BasePath, error)
	RestartSyncthing(context.Context, *empty.Empty) (*Error, error)
	Restart(context.Context, *ContainerPath) (*Error, error)
	GetVersionInfo(context.Context, *empty.Empty) (*VersionInfo, error)
	GetDockerVersion(context.Context, *empty.Empty) (*DockerVersion, error)
	GetDockerInfo(context.Context, *empty.Empty) (*DockerInfo, error)
}

func RegisterRadarServer(s *grpc.Server, srv RadarServer) {
	s.RegisterService(&_Radar_serviceDesc, srv)
}

func _Radar_GetBasePath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerPath)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadarServer).GetBasePath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ksync.Radar/GetBasePath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadarServer).GetBasePath(ctx, req.(*ContainerPath))
	}
	return interceptor(ctx, in, info, handler)
}

func _Radar_RestartSyncthing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadarServer).RestartSyncthing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ksync.Radar/RestartSyncthing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadarServer).RestartSyncthing(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Radar_Restart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerPath)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadarServer).Restart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ksync.Radar/Restart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadarServer).Restart(ctx, req.(*ContainerPath))
	}
	return interceptor(ctx, in, info, handler)
}

func _Radar_GetVersionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadarServer).GetVersionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ksync.Radar/GetVersionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadarServer).GetVersionInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Radar_GetDockerVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadarServer).GetDockerVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ksync.Radar/GetDockerVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadarServer).GetDockerVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Radar_GetDockerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RadarServer).GetDockerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ksync.Radar/GetDockerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RadarServer).GetDockerInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Radar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ksync.Radar",
	HandlerType: (*RadarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBasePath",
			Handler:    _Radar_GetBasePath_Handler,
		},
		{
			MethodName: "RestartSyncthing",
			Handler:    _Radar_RestartSyncthing_Handler,
		},
		{
			MethodName: "Restart",
			Handler:    _Radar_Restart_Handler,
		},
		{
			MethodName: "GetVersionInfo",
			Handler:    _Radar_GetVersionInfo_Handler,
		},
		{
			MethodName: "GetDockerVersion",
			Handler:    _Radar_GetDockerVersion_Handler,
		},
		{
			MethodName: "GetDockerInfo",
			Handler:    _Radar_GetDockerInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/radar.proto",
}

func init() { proto.RegisterFile("proto/radar.proto", fileDescriptor_radar_ae4bb1d450f0a6bc) }

var fileDescriptor_radar_ae4bb1d450f0a6bc = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x4d, 0xe2, 0x7c, 0x90, 0x49, 0x53, 0x85, 0x95, 0x28, 0x4b, 0x40, 0x55, 0x59, 0x71, 0xe8,
	0xc9, 0x91, 0xca, 0x91, 0x0b, 0x4d, 0x53, 0x99, 0x1c, 0x50, 0x2b, 0x17, 0x71, 0x45, 0x5b, 0x67,
	0xe3, 0xac, 0x9a, 0x78, 0xa3, 0xf5, 0x04, 0x29, 0x3f, 0x85, 0x0b, 0x7f, 0x89, 0xbf, 0x84, 0xbc,
	0xbb, 0x76, 0xbd, 0x55, 0xd3, 0x93, 0x67, 0xde, 0x9b, 0x19, 0xbf, 0x99, 0x7d, 0xf0, 0x7a, 0xab,
	0x15, 0xaa, 0x89, 0xe6, 0x0b, 0xae, 0x43, 0x13, 0x93, 0x81, 0xf9, 0x84, 0x0f, 0xf9, 0x3e, 0x4b,
	0xc6, 0xef, 0x53, 0xa5, 0xd2, 0xb5, 0x98, 0x18, 0xec, 0x7e, 0xb7, 0x9c, 0x88, 0xcd, 0x16, 0xf7,
	0xb6, 0x92, 0x5d, 0xc0, 0xf0, 0x4a, 0x65, 0xc8, 0x65, 0x26, 0xf4, 0x2d, 0xc7, 0x15, 0xf9, 0x08,
	0x47, 0x49, 0x09, 0xfc, 0x92, 0x0b, 0xda, 0x3c, 0x6b, 0x9e, 0xf7, 0xe3, 0x41, 0x85, 0xcd, 0x17,
	0xec, 0x14, 0x5e, 0x4d, 0x79, 0x2e, 0x4c, 0x39, 0x81, 0xf6, 0x72, 0xb7, 0x5e, 0xbb, 0x32, 0x13,
	0xb3, 0x77, 0xd0, 0xb9, 0xd6, 0x5a, 0x69, 0x32, 0x82, 0x60, 0x93, 0xa7, 0x8e, 0x2b, 0x42, 0xf6,
	0xa7, 0x09, 0x83, 0x9f, 0x42, 0xe7, 0x52, 0x65, 0xf3, 0x6c, 0xa9, 0x08, 0x85, 0x9e, 0x4b, 0x5d,
	0x55, 0x99, 0x92, 0x0f, 0xd0, 0x8f, 0x54, 0xc9, 0xb5, 0x0c, 0xf7, 0x08, 0x18, 0x56, 0xe2, 0x95,
	0xda, 0x6c, 0x24, 0xd2, 0xc0, 0xb1, 0x25, 0x40, 0x4e, 0xa0, 0x1b, 0x49, 0xfc, 0xc1, 0x53, 0xda,
	0x36, 0x94, 0xcb, 0x8a, 0xae, 0xe9, 0x4e, 0xae, 0x17, 0x33, 0x8e, 0x82, 0x76, 0x6c, 0x57, 0x05,
	0xb0, 0x7f, 0x4d, 0x18, 0xce, 0x54, 0xf2, 0x20, 0x74, 0xf9, 0x97, 0xc3, 0xea, 0x4e, 0x01, 0x2e,
	0x6f, 0xe7, 0xbe, 0xbc, 0x1a, 0x42, 0x3e, 0xc1, 0xf0, 0xbb, 0xcc, 0x6a, 0x25, 0x56, 0xa3, 0x0f,
	0xfa, 0x5b, 0xb4, 0x9f, 0x6e, 0xe1, 0x5d, 0xa0, 0xf3, 0xf4, 0x02, 0xc7, 0xd0, 0xba, 0xc9, 0x69,
	0xd7, 0xc0, 0xad, 0x9b, 0xbc, 0x78, 0x88, 0x4b, 0x9d, 0xac, 0x68, 0xcf, 0x3e, 0x44, 0x11, 0xb3,
	0x25, 0x80, 0x5d, 0xc8, 0xdc, 0xba, 0x98, 0xa7, 0xf9, 0x76, 0x15, 0x2b, 0x85, 0x6e, 0x9f, 0x47,
	0xa0, 0xb8, 0xd9, 0x4c, 0xcb, 0xdf, 0x42, 0xbb, 0x6d, 0x5c, 0x46, 0x18, 0x1c, 0xd9, 0xe8, 0x0e,
	0x39, 0xee, 0x72, 0x1a, 0x9c, 0x05, 0xe7, 0xfd, 0xd8, 0xc3, 0x2e, 0xfe, 0x06, 0xd0, 0x89, 0x0b,
	0xfb, 0x91, 0x29, 0x0c, 0x22, 0x81, 0x95, 0x3b, 0xc6, 0x61, 0xcd, 0x88, 0xa1, 0x67, 0xb4, 0xf1,
	0x1b, 0x8f, 0x2b, 0x5b, 0x58, 0x83, 0x7c, 0x85, 0x51, 0x2c, 0x72, 0xe4, 0x1a, 0xef, 0xf6, 0x59,
	0x82, 0x2b, 0x99, 0xa5, 0xe4, 0x24, 0xb4, 0x26, 0x0e, 0x4b, 0x13, 0x87, 0xd7, 0x85, 0x89, 0xc7,
	0xc4, 0x1b, 0x62, 0x5c, 0xc7, 0x1a, 0xe4, 0x0b, 0xf4, 0xdc, 0x84, 0x17, 0x15, 0x3c, 0xdf, 0x3c,
	0x83, 0xe3, 0x48, 0x60, 0xdd, 0xa4, 0x87, 0x7e, 0x4e, 0xbd, 0xfe, 0x5a, 0x07, 0x6b, 0x90, 0x6f,
	0x30, 0x8a, 0x04, 0xfa, 0x76, 0x3a, 0x34, 0xc7, 0xd7, 0xe8, 0xf5, 0xb0, 0x06, 0x99, 0xc2, 0xb0,
	0x9a, 0xf4, 0xa2, 0x9c, 0xb7, 0xcf, 0x8c, 0xb1, 0x6a, 0xee, 0xbb, 0x86, 0xf9, 0xfc, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0x5c, 0x41, 0x9f, 0x77, 0x2b, 0x04, 0x00, 0x00,
}
