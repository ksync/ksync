
syntax = "proto3";

package proto.ksync;

import "google/protobuf/empty.proto";
import "proto/radar.proto";

service Ksync {
  rpc GetSpecList(google.protobuf.Empty) returns (SpecList) {}
  rpc RestartSyncthing(google.protobuf.Empty) returns (Error) {}
  rpc IsAlive(google.protobuf.Empty) returns (Alive) {}
}

message SpecList {
  map<string, Spec> items = 1;
}

message Spec {
  SpecDetails details = 1;
  ServiceList services = 2;
  string status = 3;
}

message SpecDetails {
  string name = 1;

  string container_name = 2;
  string pod_name = 3;
  repeated string selector = 4;
  string namespace = 5;

  string local_path = 6;
  string remote_path = 7;

  bool reload = 8;

  bool local_read_only = 9;
  bool remote_read_only = 10;
}

message ServiceList {
  repeated Service items = 1;
}

message Service {
  SpecDetails spec_details = 1;
  RemoteContainer remote_container = 2;
  string status = 3;
}

message RemoteContainer {
  string id = 1;
  string container_name = 2;
  string node_name = 3;
  string pod_name = 4;
}

message Alive {
  bool alive = 1;
}
